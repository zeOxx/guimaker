    }

    private JLabel createJLabel(String value){
        JLabel label = new JLabel(value);
        return label;
    }

    private JButton createJButton(String value){
        JButton button = new JButton(value);
        return button;
    }

    private JTextField createJTextField(int value){
        JTextField text = new JTextField(value);
        return text;
    }

    private JTextArea createJTextArea(int valueR, int valueC){
        JTextArea text = new JTextArea(valueR, valueC);
        return text;
    }

    private JCheckBox createJCheckBox(String value){
        JCheckBox box = new JCheckBox(value);
        return box;
    }

    private JList createJList(Object [] values){
        JList list = new JList(values);
        list.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        list.setLayoutOrientation(JList.HORIZONTAL_WRAP);
        list.setVisibleRowCount(-1);
        return list;
    }

    private JComboBox createJComboBox(String [] values){
        JComboBox combo = new JComboBox(values);
        combo.setSelectedIndex(0);
        return combo;
    }

    private JSpinner createJSpinnerList(String [] values){
        SpinnerListModel spinModel = new SpinnerListModel(values);
        JSpinner spin = new JSpinner(spinModel);
        return spin;
    }

    private JSpinner createJSpinnerNumber(int value, int span){
        // needs to add SpinnerNumberModel
        SpinnerModel spinModel = new SpinnerNumberModel(value,          //initial value
                                                    value - span,   //min value
                                                    value + span,   //max value
                                                    1);             //step
        JSpinner spin = new JSpinner(spinModel);
        return spin;
    }
}